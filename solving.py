text = "TABRSKERAGEUNDERTHEPSEUDONYMBENJAMINTALLMADGEMYNAMEISBENJAMINWOODANDOWORKOORTHACIAFTRTSEOASEFSFTNESYEVENIREELBANDWUTHOUGDUREVSINCALPEROEARLYYEARSWEUSEDONLINECOMMUNICATIONTOTRABUYINGANDSELLINGSEFRETSENTHEOPEHMLRKTTIHIECNNFARSIHAVEGEENRFNNINYAPRIIATEDTESWELECIDUDTORSTURNTOMORETRADITIONALMEANSOFTRADECRAFTANDEINTELLIGENCEBUTWITHTHSINCRHASEDNURVEELLONOEFFORPRAVATEANSGISSINNITAALOWEIUSTODASSSEORTMESSAGESWITHINOURNETWORKESTABLISHINGDEADDRDDEIELOPCDTHEEULPEEERNYSTEEWIILAUCSURSMDOIIANIANDMOVERTMENTMGENCOBIDSBOMEMDERSOPTHECHNSOREIUMTHESYSTEMUSEDANUPDATEDANDAMENDEDVERSIOPLOCATIONSANDSCHEDULESTNDDICTRIBGTINGEIPSEIKETSNARWIIGSNUMEERSSDANDFTRCOMBONWOFDSTHOORIGTNALCULPERCODEBOOKCONSISTEDOFADICTVONAREOONOCTHECPLPSRAODMBSOKENUROITCETHLREGYOWWDNTNNROFFIRSANCHTHENEXICTNINCOUDINMANUPRATEDEISTOIRENDEZVOUSLOCATIONSACROSSTHEREGIONTHENUMFSEVENHUNDREDANDSIXTYTHEEEWOEDSANNWEAMDNDIDNTTCMIDESNLSETERLNGTOOOOKLLKEADGSIGNDEATULENUMFERSFROMNOUGHTTOFIVEHUNDIEDANYELEVFNAREURBERCAREEOCOIERINDURADBYDNORGEDAEHIGGOOOINRHIALOHENEWETETSIMILEBOLDERTIINDIEATETFATTHRNUMBBRISCOMPLETETHEREMAININGNUMBERSARERENDEREAWNUSINGNINECHARACTERSREADBOFTOMTOTOPAIDRIGATTNLTFTPIEHANCEPFALERDINGONEINCHETEHTHDIEITTHENUMBERSACTBOTRASCODTENTENDASDOIETSRSENNHDDNDHEBINERYREIDERTEUSIONTRANTTIOHRDERSNDNCETIEGTHENRMSERBYOOOKUAANDAOFIXETINANNGREEGSTAREINGPLACEINTHEVAULTTYPICALLYTHEINITIALBOXEFOLLOWINGWAYTHEFIRSTWOHDOFTAEMESNAGEIWCOCVTRTMDSOAGUWBEPOSLEDWHPNINFFRMINDARECAPIENDTHATTHERHWASANESSAAETORPADNEEOUIDTENITTETSAMEWAYWTTHTHNABSRTCEOHMHEBSEDAYCNDMOTTHONNHIRHTHEEEISATEAASOXWTULDREVEALOHEFIGSTNUIBERITTHECTDEPLACEDTHEREONTHEPREVIOUSVISITBYAMEMBERTDATEANDTHATWOULDTELLTHSMWHIFHBOXDOOPEGFIOSTOPNNTNGTHLTBLUEOOTHEEAREETSYTORNSERMANDENMOVMOSWEGLASSEGNWFWINLTSEFDRHTWARGOISDEMERMIGEDBYEHESUTOFTEPERLIRINGEAREATFIXEFUSINEAPNSWITDONESEYEEGAGESPENIYGTHEAORREIPONDTNGBOEREVEALSTHENUMBERFORTHESECONDWORDANDTHELOCATIOETHENUMBERALSOSIGNALSTHRLOCANIONOHTHESACOODNORRIHTHHMOSSISTORICRNASONCISARSAYSEIVENLXOTWIAUIIYUSGYHOOIESVEORDTFTHETESSAHOFTHERINGEHEPAHETHIEDTHEMESSAGEISCEADUOTILTNEFINHLPOIETEHWCICEFNRHHATOHICHEVERBSXWASWCCESEEDALWOFTHCMCOULDBEOPENEDONCEREADTHEMESSAGENUMBERSNKEYEDSOTHATANYOFTHEKEYSTOULDRPENAAYOFTSEBIXHSWPIAHMTABTTRANWOMALEIGNSONTOTAHENOSBRROLOLONESNHESHRNOEICEDIHATTSEBOXNSWERENOFTESYSTDEEDTOBERESTOREDTOTHEIRSEANDAEDLOCSTIONSWHACOAPRETRSNOSEARRIDDOUTSYTHEEHIEFTELLEMANNATTRONEWHOHASBEENINTHEPAYOFOURCONSORTIUMFROMTHEMINCASEBANKINSPECTORSEVFRASKPDQUEITIONNTHFTHPEOAMIOIISCAONMESTEFBEREUCPESSTRBTXROTAISAELPGDTODTSGUIEETHEEATURMOFTHEDYANTSUSPICIOUSBEGINNINGTHETRUENATUREOQOUROIERATHONSAEDOSTDECAMSUNRCHTISHEYTAGEWTHEBEEAKICASANRXCUSNTOHIUEJODIETOINVESTIGATEUNFORTUNATELYFORANNAIANDSTARTEDASKINGTOOMANYMUESTOONSWTENIRAFUNEATOINSWERTMEMTWKSTTAEDOENFRNMNNNWBUTENFOREUNATRLYSHTBECATEGREWHENIIRIEDTOSCAREHEROFFSHEKNEWJODIESREPUTATIONFROCHERWRRKWIOHTHEGGEFCRSOEFIGUEETOUATIANANDGOCONOINCEAETOBRYHERTILENEEIDECIDEDTOUSETHESITUATIONTOPUTPRESSUREOSTAGEDHEROWNDISAPPEARANLEINOUDERTYTRIGIERIUDTHSRHNVWSSIGICGOMASNTTASTVYINGMOTAKUOVERSHENECWORKASIGNUFICANTPAYOFFTORETURNTOTHEBANKANMSFRANKTOGIVEMEANDMYCONLEAGBESANEPPOREUNOTETOETOIPDUATHBEEMWELLSDVISHDTOARCEPTOTPEREAPSOTRDESTINIESWOULDHAVEBEENDIFFERENTIFSHEHADNDFORGETABOUTTHEWHOLEVEOTURETUTSHYWANTRDMORTSHEWOULSHYVEEMINADALAEADYEFFERCDMSSIRONGH"

from splitters import splitInto, splitIntoChunks

text = splitInto(text, 25)

from transpositions import display


def writeTo(text):
    with open("text.txt", "w") as f:
        f.write("\n".join(text))


display(text)


def rowsToColumns(text: list[list]):
    # convert a list of rows to a list of columns
    return [
        "".join([text[i][j] for i in range(len(text))]) for j in range(len(text[0]))
    ]


def columnsToRows(text: list[list]):
    # convert a list of columns to a list of rows
    return rowsToColumns(text)


def rotateRow(text, row, amount=1):
    # rotate the row
    text[row]
    text[row] = text[row][amount:] + text[row][:amount]
    return text


def rotateColumn(text, col, amount):
    text = rowsToColumns(text)
    text = rotateRow(text, col, amount)
    return columnsToRows(text)


print("---")

# for 26 rows
# shiftDown = [124]
# for col in shiftDown:
#     text = rotateColumn(text, col, 22)

# shiftUp = []
# for col in shiftUp:
#     text = rotateColumn(text, col, 1)

# for 25 rows
end4sand9s = [99, 104, 109, 114, 119, 124, 129]
for col in end4sand9s:
    text = rotateColumn(text, col, 1)

end1sand6s = [96, 91, 86]
for col in end1sand6s:
    text = rotateColumn(text, col, 24)

ends3sand8s = [68, 73, 78, 83, 88, 93]
for col in ends3sand8s:
    text = rotateColumn(text, col, 24)


shiftsDown = []
for col in shiftsDown:
    text = rotateColumn(text, col, 24)

shiftsUp = [4, 100]
for col in shiftsUp:
    text = rotateColumn(text, col, 1)

# Block Shifts
finalBlock = range(66, 98)
for col in finalBlock:
    text = rotateColumn(text, col, 1)

penultimateBlock = range(45, 66)
for col in penultimateBlock:
    text = rotateColumn(text, col, 1)

# secondBlock = range(0,34)
# for col in secondBlock:
#     text = rotateColumn(text, col, 1)

display(text)
print(len(text))
writeTo(text)
